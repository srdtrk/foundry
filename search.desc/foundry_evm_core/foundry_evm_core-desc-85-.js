searchState.loadedDescShard("foundry_evm_core", 85, "Returns <code>self</code> with the <code>attr()</code> set to […\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Red</code>].\nRemoves the state snapshot with the given <code>id</code>.\nRemoves the state snapshot with the given <code>id</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Resetting</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Rgb</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Strike</code>].\nReturns <code>self</code> with the <code>attr()</code> set to [<code>Attribute :: Underline</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: White</code>].\nReturns <code>self</code> with the <code>quirk()</code> set to [<code>Quirk :: Wrap</code>].\nReturns <code>self</code> with the <code>fg()</code> set to [<code>Color :: Yellow</code>].\nEVM State is a mapping from addresses to accounts.\nDepending on the configured chain id and block number this …\nHints to the compiler that this is a cold path, i.e. …\nConfigures the env for the given RPC transaction. Accounts …\nConfigures the env for the given RPC transaction request. …\nDerive the blob base fee update fraction based on the …\nReturns the blob base fee update fraction based on the …\nGiven an ABI and selector, it tries to find the respective …")